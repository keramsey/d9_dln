version: "3.9"
services:
  mysql:
    image: mysql:8.0.28
    security_opt:
      - seccomp:unconfined
    container_name: ${CONTAINER_PREFIX}-mysql
    command: --default_authentication-plugin=mysql_native_password
    restart: unless-stopped
    extra_hosts:
      - "mysql:0.0.0.0"
    env_file: .env
    volumes:
      - ./src-${CONTAINER_PREFIX}-mysql:/docker-entrypoint-initdb.d
    networks:
      - internal

  drupal:
    build:
      context: .
      dockerfile: drupal/Dockerfile
    container_name: ${CONTAINER_PREFIX}-drupal
    depends_on:
      - mysql
    restart: unless-stopped
    networks:
      - internal
      - external
    volumes:
      - ${CONTAINER_PREFIX}-drupal:/opt/drupal
      - ${CONTAINER_PREFIX}-drupal-data:/var/www/html
      - ./src-${CONTAINER_PREFIX}-mysql:/var/mysql/backups

  webserver:
    image: nginx:1.21.3
    container_name: ${CONTAINER_PREFIX}-webserver
    depends_on:
      - drupal
    restart: unless-stopped
    ports:
      - 80:80
    extra_hosts:
      - "${SITE_DOMAIN}:0.0.0.0"
      - "localhost:0.0.0.0"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ${CONTAINER_PREFIX}-drupal-data:/var/www/html
#      - ${CONTAINER_PREFIX}-certbot-etc:/etc/letsencrypt
    networks:
      - external

  composer:
    image: composer:2.2.6
    container_name: ${CONTAINER_PREFIX}-composer
    depends_on:
      - drupal
    working_dir: /opt/drupal
    command: ["bash", "update-composer.sh"]
    volumes:
      - ${CONTAINER_PREFIX}-drupal:/opt/drupal

#  certbot:
#    depends_on:
#      - webserver
#    image: certbot/certbot
#    container_name: certbot
#    volumes:
#      - ${CONTAINER_PREFIX}-certbot-etc:/etc/letsencrypt
#      - ${CONTAINER_PREFIX}-drupal-data:/var/www/html
#    command: certonly --webroot --webroot-path=/var/www/html --email kramsey@jornada-vmail.nmsu.edu --agree-tos --no-eff-email --staging -d example.com -d ${SITE_DOMAIN}
#    command: certonly --dry-run --webroot --webroot-path=/var/www/html --email kramsey@jornada-vmail.nmsu.edu --agree-tos --no-eff-email --staging -d example.com -d ${SITE_DOMAIN}

  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin:5.1.1-apache
    container_name: ${CONTAINER_PREFIX}-phpmyadmin
    extra_hosts:
      - "${SITE_DOMAIN}:0.0.0.0"
      - "localhost:0.0.0.0"
    networks:
      - internal
      - external
    ports:
      - 81:80
    restart: unless-stopped
    environment:
      PMA_HOST: mysql

networks:
  external:
    driver: bridge
  internal:
    driver: bridge

volumes:
  dln-drupal:
  dln-drupal-data:
